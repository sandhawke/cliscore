CLISCORE LIFECYCLE DEMO - COMPLETE EXAMPLE OUTPUT
================================================

This file shows the actual output from running ./demo.sh

==============================================
cliscore Lifecycle Demo
==============================================

üìç Step 1: We're in examples/find-demo/
/home/sandro/cliscore/examples/find-demo

üìç Step 2: Creating a leftover directory (simulating previous run)
   Created: /tmp/cliscore-find-demo.leftover.123

üìç Step 3: Running tests (watch for lifecycle functions)
   run_first() will detect and clean the leftover
   before_each_file() will create fresh temp directory
   after_each_file() will clean up
   run_last() will verify all clean

Running: cliscore test-find.md
----------------------------------------
‚úì /home/sandro/cliscore/examples/find-demo/test-find.md: 100.0% (17/17)
‚úì All tests passed! (17/17)
----------------------------------------

üìç Step 4: Verify all temp directories were cleaned up
   ‚úÖ All clean! Lifecycle functions worked perfectly.

üìç Step 5: What each lifecycle function does

   run_first() (ran in separate shell before tests):
     - Checked for leftover /tmp/cliscore-find-demo* directories
     - Cleaned up the leftover.123 directory we created

   before_each_file() (ran in test shell before tests):
     - Created fresh temp directory with mktemp -d
     - Set TEST_TMPDIR environment variable
     - Changed to temp directory (cd $TEST_TMPDIR)

   Tests ran...
     - All 17 tests executed in the temp directory
     - Tests used helper functions (setup_test_files, etc)
     - Tests verified temp directory isolation

   after_each_file() (ran in test shell after tests):
     - Removed the temp directory

   run_last() (ran in separate shell after tests):
     - Verified no temp directories remain
     - Would clean up any that existed (safety net)

==============================================
Demo complete!
==============================================

KEY TAKEAWAYS
=============

1. LIFECYCLE FUNCTIONS ARE POWERFUL
   - run_first/run_last: Run in separate shells, always execute
   - before_each_file/after_each_file: Run in test shell, can set env vars

2. TEMP DIRECTORY PATTERN IS ROBUST
   - Use consistent naming (TEMP_PREFIX pattern)
   - Clean up in both after_each_file AND run_last (safety net)
   - Check for leftovers in run_first

3. HELPER FUNCTIONS ARE CONVENIENT
   - Define in cliscore.sh
   - Available to all tests
   - Keep tests DRY

4. TESTS RUN IN ISOLATION
   - Each test file gets fresh temp directory
   - Environment variables persist within file
   - Clean slate between files

5. THE SAFETY NET WORKS
   - Even if test crashes, run_last executes
   - Critical cleanup always happens
   - No leftover temp files
